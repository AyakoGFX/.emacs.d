;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(query-replace-history string-rectangle-history read-from-kill-ring-history org-read-date-history read-number-history xref--read-pattern-history xref--read-identifier-history goto-line-history command-history file-name-history buffer-name-history minibuffer-history extended-command-history))
(setq query-replace-history '("lisp" "Lisp" "emacs" "this"))
(setq string-rectangle-history '("emacs " "punda " "emacs "))
(setq command-history '((lsp-ui-doc-glance) (execute-extended-command nil "lsp-ui-doc-glance" "lsp ui doc ") (lsp-signature-activate) (execute-extended-command nil "lsp-signature-activate" "lsp sig") (lsp-ui-doc-show) (execute-extended-command nil "lsp-ui-doc-show") (lsp-ui-doc-show) (execute-extended-command nil "lsp-ui-doc-show") (lsp-ui-doc-show) (execute-extended-command nil "lsp-ui-doc-show") (lsp-ui-doc-show) (execute-extended-command nil "lsp-ui-doc-show") (find-file "~/.emacs.d/init.el" t) (lsp-ui-doc-show) (execute-extended-command nil "lsp-ui-doc-show" "lsp ui sh") (switch-to-buffer "*Warnings*" nil 'force-same-window) (switch-to-buffer "*Messages*" nil 'force-same-window) (lsp-describe-session) (execute-extended-command nil "lsp-describe-session" "lsp des") (find-file "~/c-pro/main.c" t) (find-file "~/c-pro/2mian.c" t) (find-file "~/c-pro/min" t) (describe-key '(("" . [12]))) (execute-extended-command nil "describe-key") (describe-key '(("" . [backspace]))) (execute-extended-command nil "describe-key" "desc key") (which-key-mode 'toggle) (execute-extended-command nil "which-key-mode") (which-key-mode 'toggle) (execute-extended-command nil "which-key-mode") (which-key-mode 'toggle) (execute-extended-command nil "which-key-mode") (which-key-mode 'toggle) (execute-extended-command nil "which-key-mode" "whic") (find-file "~/c-pro/2mian.c" t) (find-file "~/c-pro/2mian.c" t) (find-file "~/c-pro/2mian.c" t) (find-file "~/c-pro/main.c" t) (find-file "~/.emacs.d/config.org" t) (switch-to-buffer "*Messages*" nil 'force-same-window) (find-file "~/c-pro/main.c" t) (set-rectangular-region-anchor) (execute-extended-command nil "set-rectangular-region-anchor" "set-re") (cua-mode 'toggle) (execute-extended-command nil "cua-mode") (cua-mode 'toggle) (execute-extended-command nil "cua-mode") (cua-mode 'toggle) (execute-extended-command nil "cua-mode") (find-file "~/c-pro/test.txt" t) (query-replace-regexp "Lisp" "lisp" nil (use-region-beginning) (use-region-end) nil (use-region-noncontiguous-p)) (execute-extended-command nil "query-replace-regexp") (replace-regexp "this" "emacs" nil (use-region-beginning) (use-region-end) nil (use-region-noncontiguous-p)) (execute-extended-command nil "replace-regexp" "replace ") (cua-mode 'toggle) (execute-extended-command nil "cua-mode") (cua-mode 'toggle) (execute-extended-command nil "cua-mode") (cua-rectangle-mark-mode 'toggle) (execute-extended-command nil "cua-rectangle-mark-mode" "cua tan") (cua-selection-mode nil) (execute-extended-command nil "cua-selection-mode" "cua sele") (cua-mode 'toggle) (execute-extended-command nil "cua-mode") (switch-to-buffer "*scratch*" nil 'force-same-window) (toggle-tool-bar-mode-from-frame 'toggle) (execute-extended-command nil "toggle-tool-bar-mode-from-frame") (toggle-tool-bar-mode-from-frame 'toggle) (execute-extended-command nil "toggle-tool-bar-mode-from-frame" "toggle bar") (toggle-frame-tab-bar) (execute-extended-command nil "toggle-frame-tab-bar" "bar togg") (customize-option 'cua-mode) (execute-extended-command nil "customize-option" "c") (describe-variable 'cua-mode) (execute-extended-command nil "describe-variable" "descr va") (customize-option 'cua-mode) (execute-extended-command nil "customize-option") (toggle-tool-bar-mode-from-frame 'toggle) (execute-extended-command nil "toggle-tool-bar-mode-from-frame" "toggl tool") (switch-to-buffer "*dashboard*" nil 'force-same-window) (customize-option 'cua-mode) (execute-extended-command nil "customize-option" "customize-op") (cua-mode 'toggle) (execute-extended-command nil "cua-mode") (cua-mode 'toggle) (execute-extended-command nil "cua-mode" "cua") (windmove-default-keybindings) (execute-extended-command nil "windmove-default-keybindings") (describe-personal-keybindings) (execute-extended-command nil "describe-personal-keybindings" "keybind") (string-rectangle 9806 9878 "emacs ") (org-mode) (execute-extended-command nil "org-mode") (string-rectangle 9878 9885 "punda ") (string-rectangle 9811 9874 "emacs ") (org-mode) (execute-extended-command nil "org-mode" "org mode") (emacs-lisp-mode) (execute-extended-command nil "emacs-lisp-mode" "lisp") (completion-at-point)))
(setq file-name-history '("~/.emacs.d/init.el" "~/c-pro/main.c" "~/c-pro/2mian.c" "~/c-pro/min" "~/c-pro/2mian.c" "~/c-pro/main.c" "~/.emacs.d/config.org" "~/c-pro/main.c" "~/c-pro/test.txt" "~/.emacs.d/config.org" "~/c-pro/main.c" "~/.emacs.d/init.el" "~/.emacs.d/" "~/.emacs.d/config.org" "~/" "~/.emacs.d/config.org" "~/.emacs.d/" "~/.emacs.d/config.org" "~/Downloads/adin_x_nick_fuentes_x_sneako_x_tate_messages.txt" "~/.dotfiles/" "~/.emacs.d/config.org" "~/.emacs.d/init.el" "~/.emacs.d/config.org" "~/.emacs.d/config.org_archive" "~/.emacs.d/init.el" "~/.emacs.d/config.org" "~/.emacs.d/init.el" "~/.emacs.d/config.org"))
(setq buffer-name-history '("*Warnings*" "*Messages*" "*scratch*" "*dashboard*" "*vterm*" "*scratch*" "*Messages*" "*scratch*" "init.el" "config.org" "*Messages*" "init.el" "config.org" "*Ibuffer*" "*Warnings*"))
(setq minibuffer-history '("e" "cua-mode" "recentf-mode" "doom-modeline"))
(setq extended-command-history '("lsp-ui-doc-glance" "lsp-signature-activate" "lsp-ui-doc-show" "lsp-describe-session" "describe-key" "which-key-mode" "set-rectangular-region-anchor" "cua-mode" "query-replace-regexp" "replace-regexp" "cua-mode" "cua-rectangle-mark-mode" "cua-selection-mode" "cua-mode" "toggle-tool-bar-mode-from-frame" "toggle-frame-tab-bar" "customize-option" "describe-variable" "customize-option" "toggle-tool-bar-mode-from-frame" "customize-option" "cua-mode" "windmove-default-keybindings" "describe-personal-keybindings" "org-mode" "emacs-lisp-mode" "completion-at-point" "eval-region" "vundo" "yas/insert-snippet" "lsp-completion-mode" "lsp-execute-code-action" "lsp-mode" "dired" "vundo" "kill-buffer" "vterm" "eval-region" "lisp-mode" "emacs-lisp-mode" "recentf-open" "savehist-mode" "recentf-open-files" "recentf" "dashboard-refresh-buffer" "vterm" "dired" "eval-region" "comment-line" "nerd-icons-install-fonts" "comment-region" "dired" "display-battery-mode" "eval-region" "package-install" "previous-buffer" "ibuffer" "undo-redo" "vterm" "ibuffer" "switch-to-buffer" "ido-kill-buffer" "kill-buffer" "vterm-mode" "vertico-buffer-mode" "ibuffer" "my-line-save" "eval-region" "package-install" "eval-region" "package-install" "package-refresh-contents"))
