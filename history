;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(search-ring woman-topic-history org-roam-node-history shell-command-history compile-history org-refile-history query-replace-history string-rectangle-history read-from-kill-ring-history org-read-date-history read-number-history xref--read-pattern-history xref--read-identifier-history goto-line-history command-history file-name-history buffer-name-history minibuffer-history extended-command-history))
(setq search-ring '(#("spell" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("key		" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("key" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("spe;;" 0 5 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq woman-topic-history '("B"))
(setq org-roam-node-history '("make swap file in btrfs and ext4" "cmus"))
(setq shell-command-history '("ls" "ls -la" "ls" "bash -c ls" "ls"))
(setq compile-history '("grep -re emacs" "grep emacs" "pwd" "ls" "gcc -o p p.c" "gcc -o p main.c" "cc -o p mian.c" "cc -o p mian" "cc -o p mian.c" "gcc -o p mian.c" "gcc -o HW 2main.c" "make -k " "gcc -o main 2main.c" "gcc"))
(setq query-replace-history '("lisp" "Lisp" "emacs" "this"))
(setq string-rectangle-history '("emacs " "punda " "emacs "))
(setq command-history '((eval-region (region-beginning) (region-end)) (execute-extended-command nil "eval-region" nil) (eval-region (region-beginning) (region-end)) (execute-extended-command nil "eval-region" nil) (eval-region (region-beginning) (region-end)) (execute-extended-command nil "eval-region" "eva") (describe-key '(("\244" . [134217764]))) (execute-extended-command nil "describe-key" "desc") (execute-extended-command nil "jinx-correct" nil) (execute-extended-command nil "jinx-correct" "jinx") (describe-package 'doom-modeline) (execute-extended-command nil "describe-package" "describe pa") (eval-region (region-beginning) (region-end)) (execute-extended-command nil "eval-region" "eval ") (wucuo-start) (execute-extended-command nil "wucuo-start") (wucuo-mode 'toggle) (execute-extended-command nil "wucuo-mode") (flyspell-mode 'toggle) (execute-extended-command nil "flyspell-mode") (wucuo-mode 'toggle) (execute-extended-command nil "wucuo-mode") (wucuo-mode 'toggle) (execute-extended-command nil "wucuo-mode" "wuc") (flyspell-mode 'toggle) (execute-extended-command nil "flyspell-mode" "dl") (flyspell-mode 'toggle) (execute-extended-command nil "flyspell-mode" "fl") (wucuo-start) (execute-extended-command nil "wucuo-start") (find-file "~/tmp/test-spell.txt" t) (wucuo-start) (execute-extended-command nil "wucuo-start" nil) (wucuo-stop) (execute-extended-command nil "wucuo-stop" nil) (wucuo-start) (execute-extended-command nil "wucuo-start" nil) (wucuo-stop) (execute-extended-command nil "wucuo-stop" nil) (wucuo-start) (execute-extended-command nil "wucuo-start" nil) (wucuo-start) (execute-extended-command nil "wucuo-start" "w") (wucuo-stop) (execute-extended-command nil "wucuo-stop" nil) (wucuo-start) (execute-extended-command nil "wucuo-start" "wucuo s") (eval-region (region-beginning) (region-end)) (execute-extended-command nil "eval-region" "eva") (wucuo-mode 'toggle) (execute-extended-command nil "wucuo-mode") (wucuo-mode 'toggle) (execute-extended-command nil "wucuo-mode") (wucuo-mode 'toggle) (execute-extended-command nil "wucuo-mode" "wu") (woman nil nil) (execute-extended-command nil "woman" "wo") (flyspell-mode 'toggle) (execute-extended-command nil "flyspell-mode") (flyspell-mode 'toggle) (execute-extended-command nil "flyspell-mode") (execute-extended-command nil "flyspell-correct-word" "flyspell map") (flyspell-mode 'toggle) (execute-extended-command nil "flyspell-mode" "fly") (org-insert-structure-template "src") (execute-extended-command nil "org-insert-structure-template" "org") (flyspell-mode 'toggle) (execute-extended-command nil "flyspell-mode" "flys") (find-file "~/.dotfiles/emacs-notes/.config/doom/config.org" t) (customize-themes) (execute-extended-command nil "customize-themes" "cusr") (vundo) (execute-extended-command nil "vundo" "und") (org-roam-node-open #s(org-roam-node "/home/ayako/roam/Index's/linux_index.org" "Linux Index" nil (26371 60443 220864 361000) (26371 60443 214197 374000) "b8763337-996e-41db-adb7-6c5e686a1e71" 0 1 nil nil nil nil "Linux Index" (("CATEGORY" . "linux_index") ("ID" . "b8763337-996e-41db-adb7-6c5e686a1e71") ("BLOCKED" . "") ("FILE" . "/home/ayako/roam/Index's/linux_index.org") ("PRIORITY" . "B")) nil nil nil nil) nil) (execute-extended-command nil "org-roam-node-open" "org roam en") (deft-find-file "Index's/linux_index.org") (describe-key '(("k" . [24 107]))) (execute-extended-command nil "describe-key" "desc") (org-version nil t t) (execute-extended-command nil "org-version" "org") (eval-region (region-beginning) (region-end)) (execute-extended-command nil "eval-region" "ev") (org-insert-structure-template "src") (execute-extended-command nil "org-insert-structure-template") (org-insert-structure-template "src") (execute-extended-command nil "org-insert-structure-template" "org temp") (org-version nil t t) (execute-extended-command nil "org-version" "org ver") (compile "grep -re emacs" nil) (execute-extended-command nil "compile") (compile "grep -re emacs" nil) (execute-extended-command nil "compile") (compile "grep emacs" nil) (execute-extended-command nil "compile") (compile "pwd" nil) (execute-extended-command nil "compile") (compile "ls" nil) (execute-extended-command nil "compile" "com") (describe-variable 'display-line-numbers-type) (eval-region (region-beginning) (region-end))))
(setq file-name-history '("TAGS" "~/tmp/test-spell.txt" "~/.dotfiles/emacs-notes/.config/doom/config.org" "~/.emacs.d/learn emacs/eintr.info" "~/Videos/zherka/RACIST OMEGLE COMEBACK STREAM [v5fffkb].mp4.part" "~/.emacs.d/config.org" "~/.emacs.d/init.el" "~/.emacs.d/config.org" "~/dwm/wk/my.wks" "~/c-pro/" "~/c-pro/main.c" "~/c-pro/" "~/c-pro/c/" "~/c-pro/c/p.c" "~/c-pro/main.c" "~/c-pro/c/p.c" "~/c-pro/c/" "~/c-pro/" "~/c-pro/main.c" "~/c-pro/2mian.c" "~/.emacs.d/config.el" "~/.emacs.d/init.el" "~/c-pro/main.c" "~/c-pro/2mian.c" "~/c-pro/min" "~/c-pro/2mian.c" "~/c-pro/main.c" "~/.emacs.d/config.org" "~/c-pro/main.c" "~/c-pro/test.txt" "~/.emacs.d/config.org" "~/c-pro/main.c" "~/.emacs.d/init.el" "~/.emacs.d/" "~/.emacs.d/config.org" "~/" "~/.emacs.d/config.org" "~/.emacs.d/" "~/.emacs.d/config.org" "~/Downloads/adin_x_nick_fuentes_x_sneako_x_tate_messages.txt" "~/.dotfiles/" "~/.emacs.d/config.org" "~/.emacs.d/init.el" "~/.emacs.d/config.org" "~/.emacs.d/config.org_archive" "~/.emacs.d/init.el" "~/.emacs.d/config.org" "~/.emacs.d/init.el" "~/.emacs.d/config.org"))
(setq buffer-name-history '("*Messages*" "*vterm*" "*compilation*" "*Warnings*" "*Messages*" "*scratch*" "*dashboard*" "*vterm*" "*scratch*" "*Messages*" "*scratch*" "init.el" "config.org" "*Messages*" "init.el" "config.org" "*Ibuffer*" "*Warnings*"))
(setq minibuffer-history '("doom-modeline" "yes" "Index's/linux_index.org" "display-line-numbers-type" "doom-molokai" "nerd-icons-font-family" "/bin/fish" "/bin/bash" "vterm-shell" "e" "cua-mode" "recentf-mode" "doom-modeline"))
(setq extended-command-history '("eval-region" "describe-key" "jinx-correct" "describe-package" "eval-region" "wucuo-start" "wucuo-mode" "flyspell-mode" "wucuo-mode" "flyspell-mode" "wucuo-start" "wucuo-stop" "wucuo-start" "wucuo-stop" "wucuo-start" "wucuo-stop" "wucuo-start" "eval-region" "wucuo-mode" "woman" "flyspell-mode" "flyspell-correct-word" "flyspell-mode" "org-insert-structure-template" "flyspell-mode" "customize-themes" "vundo" "org-roam-node-open" "describe-key" "org-version" "eval-region" "org-insert-structure-template" "org-version" "compile" "eval-region" "kill-buffer" "deft-find-file" "eval-region" "org-roam-capture" "customize-themes" "customize-option" "load-theme" "eval-region" "overwrite-mode" "treemacs-kill-buffer" "ansi-term" "eval-region" "compile" "cd" "compile" "vterm" "compile" "lsp-format-buffer" "compile" "lsp-ui-doc-glance" "lsp-signature-activate" "lsp-ui-doc-show" "lsp-describe-session" "describe-key" "which-key-mode" "set-rectangular-region-anchor" "cua-mode" "query-replace-regexp" "replace-regexp" "cua-mode" "cua-rectangle-mark-mode" "cua-selection-mode" "cua-mode" "toggle-tool-bar-mode-from-frame" "toggle-frame-tab-bar" "customize-option" "describe-variable" "customize-option" "toggle-tool-bar-mode-from-frame" "customize-option" "cua-mode" "windmove-default-keybindings" "describe-personal-keybindings" "org-mode" "emacs-lisp-mode" "completion-at-point" "eval-region" "vundo" "yas/insert-snippet" "lsp-completion-mode" "lsp-execute-code-action" "lsp-mode" "dired" "vundo" "kill-buffer" "vterm" "eval-region" "lisp-mode" "emacs-lisp-mode" "recentf-open" "savehist-mode" "recentf-open-files" "recentf" "dashboard-refresh-buffer" "vterm"))
