;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by â€˜savehistâ€™.

(setq savehist-minibuffer-history-variables '(consult--find-history org-link--history consult--buffer-history consult--grep-history Man-topic-history search-ring woman-topic-history org-roam-node-history shell-command-history compile-history org-refile-history query-replace-history string-rectangle-history read-from-kill-ring-history org-read-date-history read-number-history xref--read-pattern-history xref--read-identifier-history goto-line-history command-history file-name-history buffer-name-history minibuffer-history extended-command-history))
(setq consult--buffer-history '("*scratch*øˆ€€‚"))
(setq consult--grep-history '("#"))
(setq search-ring '(#("bash" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("todo" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("TODO" 0 4 (isearch-case-fold-search nil isearch-regexp-function nil)) #("mtp" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("org-roam" 0 8 (isearch-case-fold-search t isearch-regexp-function nil)) #("roam" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("C-c n d" 0 7 (isearch-case-fold-search nil isearch-regexp-function nil)) #("consult-" 0 8 (isearch-case-fold-search t isearch-regexp-function nil)) #("use-package emacs" 0 17 (isearch-case-fold-search t isearch-regexp-function nil)) #("buffer" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("compl" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("org--" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("point" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("full" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("o" 0 1 (isearch-case-fold-search t isearch-regexp-function nil)) #("org" 0 3 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq woman-topic-history '("B"))
(setq org-roam-node-history '("Mount Android To Linux" "Linux Index" "perifoif" "blaefie" "Linux Index" "make swap file in btrfs and ext4" "cmus"))
(setq shell-command-history '("ls -la" "rm -rf README.org eln-cache/ auto-save-list/ " "rm README.org eln-cache/ auto-save-list/ " "ls -l" "touch README.org" "simple-mtpfs --device 1 ~/phone" "fusermount -u ~/phone " "pwd " "cd .config/fish/" "ls -la" "ls" "rm 2024-10-10.org " "touch sudo-edit-file-in-emacs.org" "thunar" "ls -lh" "ls -h" "ls -la" "ffmpeg -i wmacs_upscayl_2x_realesrgan-x4plus-anime.png wmacs_upscayl_2x_realesrgan-x4plus-anime.jpg" "espeak -f emacs-switch.sh " "espeak" "touch main.c" "ls" "ls -la" "ls" "bash -c ls" "ls"))
(setq compile-history '("gcc -o mycd main.c" "grep -re emacs" "grep emacs" "pwd" "ls" "gcc -o p p.c" "gcc -o p main.c" "cc -o p mian.c" "cc -o p mian" "cc -o p mian.c" "gcc -o p mian.c" "gcc -o HW 2main.c" "make -k " "gcc -o main 2main.c" "gcc"))
(setq query-replace-history '("lisp" "Lisp" "emacs" "this"))
(setq string-rectangle-history '("emacs " "punda " "emacs "))
(setq goto-line-history '("58"))
(setq command-history '((find-file "~/.emacs.d/init.el" t) (nerd-icons-install-fonts nil) (execute-extended-command nil "nerd-icons-install-fonts" "nerd fon") (shell-command "ls -la" nil nil) (shell-command "rm -rf README.org eln-cache/ auto-save-list/ " nil nil) (shell-command "rm README.org eln-cache/ auto-save-list/ " nil nil) (shell-command "ls -l" nil nil) (magit-remote-rename "origin" "git@github.com:AyakoGFX/emacs-from-scratch-template.git") (dired "~/emacs-from-scratch/emacs-from-scratch-template/" nil) (list-directory "~/emacs-from-scratch/emacs-from-scratch-template/" nil) (shell-command "touch README.org" nil nil) (find-file "~/emacs-from-scratch/emacs-from-scratch-template/" t) (sudo-edit nil) (execute-extended-command nil "sudo-edit") (find-file "/etc/fstab" t) (sudo-edit nil) (execute-extended-command nil "sudo-edit" "sudo e") (eval-region (region-beginning) (region-end)) (execute-extended-command nil "eval-region" "eva") (org-insert-structure-template "src") (execute-extended-command nil "org-insert-structure-template") (find-file "~/roam/org/Yt/sudo-edit-file-in-emacs.org" t) (magit-status #12="~/dwm/" '((61 . 29) ((#1="/home/ayako/dwm/" #11="symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote font-lock-face magit-branch-remote))) . "refs/remotes/origin/main") ((#1# #2="rev-parse" #3="--short" "HEAD~") . "9b336ab") ((#1# #2# #3# #5="HEAD") . "7e438bf") ((#1# #2# #4="--verify" "HEAD~10") . "dd8189116dbbc7b181285c14faa0058134618bcc") ((#1# magit-get-upstream-branch nil) . #("origin/main" 0 11 (face magit-branch-remote font-lock-face magit-branch-remote))) ((#1# magit-get-push-branch nil nil)) ((#1# #2# #4# "refs/stash")) ((#1# #2# "--is-bare-repository") . "false
") (#1# . "2.46.2") ((#1# magit-gitdir) . "/home/ayako/dwm/.git/") (("/home/ayako/dwm/" #2# #16="--git-dir") . ".git") ((#1# #6="describe" "--contains" #5#)) ((#1# #6# "--long" "--tags") . "added-script-spell-6-g7e438bf") ((#1# magit-get-push-branch #7="main" nil)) ((#1# #8="log" #9="--no-walk" "--format=%s" #("origin/main^{commit}" 0 11 (font-lock-face magit-branch-remote face magit-branch-remote)) #10="--") . "z") ((#1# magit-get-upstream-branch #7#) . #("origin/main" 0 11 (face magit-branch-remote font-lock-face (magit-branch-upstream magit-branch-remote)))) ((#1# #2# #4# "--abbrev-ref" "main@{upstream}") . "origin/main") ((#1# #8# #9# "--format=%h %s" "HEAD^{commit}" #10#) . "7e438bf z") ((#1# #11# #3# #5#) . #7#) ((#1# #2# #4# "HEAD") . "7e438bff26b6e3553c554e0137e193577bb0b3ec") ((#1# . config) . #s(hash-table test equal data ("filter.lfs.process" ("git-lfs filter-process") "filter.lfs.required" ("true") "filter.lfs.clean" ("git-lfs clean -- %f") "filter.lfs.smudge" ("git-lfs smudge -- %f") "user.name" ("ayako") "user.email" ("ayako.gfx@gmail.com") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("git@github.com:AyakoGFX/dwm.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.main.remote" ("origin") "branch.main.merge" ("refs/heads/main") "branch.main.vscode-merge-base" ("origin/main") "lfs.repositoryformatversion" ("0") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false")))) (("/home/ayako/dwm/" . magit-toplevel) . #1#) ((#12# . magit-toplevel) . "/home/ayako/dwm/") ((#13="/home/ayako/dwm/" #2# "--show-cdup") . #14="") ((#13# #2# #18="--show-toplevel") . "/home/ayako/dwm") ((#15="~/" "config" "--get-color" #14# "reset") . "[m") ((#15# . magit-toplevel)) ((#17="/home/ayako/" #2# #16#)) ((#17# #2# #18#)))) (find-file "~/dwm/setup/setup.sh" t) (describe-package 'cdb) (shell-command "simple-mtpfs --device 1 ~/phone" nil nil) (shell-command "fusermount -u ~/phone " nil nil) (vc-diff nil t) (execute-extended-command nil "vc-diff" "vc") (find-file "~/.config/fish/config.fish" t) (find-file "~/.config/fish/" t) (shell-command "pwd " nil nil) (shell-command "cd .config/fish/" nil nil) (shell-command "ls -la" nil nil) (shell-command "ls -la" nil nil) (shell-command "ls" nil nil) (shell-command "rm 2024-10-10.org " nil nil) (find-file "~/roam/daily/" t) (describe-variable 'org-roam-dailies-capture-templates) (describe-key '(("nm" . [3 110 109]))) (execute-extended-command nil "describe-key" "des") (org-roam-dailies-goto-today) (execute-extended-command nil "org-roam-dailies-goto-today" "org-roam-dailies-goto-to") (vc-diff nil t) (execute-extended-command nil "vc-diff" "vc ") (consult-isearch-history) (execute-extended-command nil "consult-isearch-history" "consult se") (org-insert-structure-template "src") (describe-key '(("\211" . [M-tab]))) (execute-extended-command nil "describe-key") (describe-key '(("\351" . [134217801]))) (execute-extended-command nil "describe-key" "desc") (complete-symbol nil) (execute-extended-command nil "complete-symbol" "comp sy") (vc-diff nil t) (execute-extended-command nil "vc-diff" "vc") (find-file "~/.grip/" t) (describe-variable 'org-roam-dailies-directory) (org-mode) (execute-extended-command nil "org-mode" "org mo") (org-roam-ui-mode 'toggle) (execute-extended-command nil "org-roam-ui-mode" "ui roam") (org-insert-structure-template "src") (execute-extended-command nil "org-insert-structure-template" "inse") (my/org-roam-list-tags) (execute-extended-command nil "my/org-roam-list-tags" "my tags") (my/org-roam-search) (execute-extended-command nil "my/org-roam-search") (my/org-roam-search) (execute-extended-command nil "my/org-roam-search" "my") (toggle-frame-fullscreen) (execute-extended-command nil "toggle-frame-fullscreen") (toggle-frame-fullscreen) (execute-extended-command nil "toggle-frame-fullscreen" "toggle fu") (vc-diff nil t) (execute-extended-command nil "vc-diff") (vc-diff nil t) (execute-extended-command nil "vc-diff" "vc") (org-mode) (execute-extended-command nil "org-mode" "org") (eval-buffer) (execute-extended-command nil "eval-buffer" "eval") (switch-to-buffer "*Messages*" nil 'force-same-window) (org-open-at-point nil) (execute-extended-command nil "org-open-at-point" "org opr") (org-open-at-point nil) (execute-extended-command nil "org-open-at-point" "org open ") (markdown-mode) (execute-extended-command nil "markdown-mode" "mark") (test/org-roam-list-tags) (execute-extended-command nil "test/org-roam-list-tags" "test") (test/org-roam-list-tags) (execute-extended-command nil "test/org-roam-list-tags" "test roam") (eval-buffer) (execute-extended-command nil "eval-buffer" "eva") (switch-to-buffer "*scratch*" nil 'force-same-window) (my/org-roam-list-tags) (execute-extended-command nil "my/org-roam-list-tags") (my/org-roam-list-tags) (execute-extended-command nil "my/org-roam-list-tags")))
(setq file-name-history '("~/.emacs.d/init.el" "~/emacs-from-scratch/emacs-from-scratch-template/" "/etc/fstab" "~/roam/org/Yt/sudo-edit-file-in-emacs.org" "~/dwm/" "~/dwm/setup/setup.sh" "~/.config/fish/config.fish" "~/.config/fish/" "~/roam/daily/" "~/.grip/" "~/.emacs.d/config.org" "~/roam/org/Yt/sudo-edit-file-in-emacs.org" "~/roam/org/Yt/" "~/tmp/test-spell.txt" "~/roam/org/Yt/setup-spellcheck-in-emacs.org" "~/roam/org/Yt/" "~/Pictures/tux-craft/" "~/tmp/emacs-tut.txt" "~/roam/org/Yt/testing.org" "~/roam/org/Yt/setup-spellcheck-in-emacs.org" "~/tmp/c/" "~/tmp/emacs-switch.sh" "~/tmp/" "~/.emacs.d/" "TAGS" "~/tmp/test-spell.txt" "~/.dotfiles/emacs-notes/.config/doom/config.org" "~/.emacs.d/learn emacs/eintr.info" "~/Videos/zherka/RACIST OMEGLE COMEBACK STREAM [v5fffkb].mp4.part" "~/.emacs.d/config.org" "~/.emacs.d/init.el" "~/.emacs.d/config.org" "~/dwm/wk/my.wks" "~/c-pro/" "~/c-pro/main.c" "~/c-pro/" "~/c-pro/c/" "~/c-pro/c/p.c" "~/c-pro/main.c" "~/c-pro/c/p.c" "~/c-pro/c/" "~/c-pro/" "~/c-pro/main.c" "~/c-pro/2mian.c" "~/.emacs.d/config.el" "~/.emacs.d/init.el" "~/c-pro/main.c" "~/c-pro/2mian.c" "~/c-pro/min" "~/c-pro/2mian.c" "~/c-pro/main.c" "~/.emacs.d/config.org" "~/c-pro/main.c" "~/c-pro/test.txt" "~/.emacs.d/config.org" "~/c-pro/main.c" "~/.emacs.d/init.el" "~/.emacs.d/" "~/.emacs.d/config.org" "~/" "~/.emacs.d/config.org" "~/.emacs.d/" "~/.emacs.d/config.org" "~/Downloads/adin_x_nick_fuentes_x_sneako_x_tate_messages.txt" "~/.dotfiles/" "~/.emacs.d/config.org" "~/.emacs.d/init.el" "~/.emacs.d/config.org" "~/.emacs.d/config.org_archive" "~/.emacs.d/init.el" "~/.emacs.d/config.org" "~/.emacs.d/init.el" "~/.emacs.d/config.org"))
(setq buffer-name-history '("*Messages*" "*scratch*" "*Messages*" "*scratch*" "*Messages*" "*vterm*" "*compilation*" "*Warnings*" "*Messages*" "*scratch*" "*dashboard*" "*vterm*" "*scratch*" "*Messages*" "*scratch*" "init.el" "config.org" "*Messages*" "init.el" "config.org" "*Ibuffer*" "*Warnings*"))
(setq minibuffer-history '("git@github.com:AyakoGFX/emacs-from-scratch-template.git" "origin" "cdb" "org-roam-dailies-capture-templates" "org-roam-dailies-directory" "Index's/linux_index.org" "doom-modeline" "yes" "Index's/linux_index.org" "display-line-numbers-type" "doom-molokai" "nerd-icons-font-family" "/bin/fish" "/bin/bash" "vterm-shell" "e" "cua-mode" "recentf-mode" "doom-modeline"))
(setq extended-command-history '("nerd-icons-install-fonts" "sudo-edit" "eval-region" "org-insert-structure-template" "vc-diff" "describe-key" "org-roam-dailies-goto-today" "vc-diff" "consult-isearch-history" "describe-key" "complete-symbol" "vc-diff" "org-mode" "org-roam-ui-mode" "org-insert-structure-template" "my/org-roam-list-tags" "my/org-roam-search" "toggle-frame-fullscreen" "vc-diff" "org-mode" "eval-buffer" "org-open-at-point" "markdown-mode" "test/org-roam-list-tags" "eval-buffer" "my/org-roam-list-tags" "eval-region" "my/org-roam-visit-node-fullscreen" "eval-buffer" "describe-key" "eval-buffer" "emacs-lisp-mode" "org-roam-buffer" "org-roam-db-sync" "describe-key" "org-insert-structure-template" "vc-diff" "org-mode" "text-mode" "fundamental-mode" "help-with-tutorial" "man" "display-line-numbers-mode" "help-with-tutorial" "compile" "eval-region" "org-insert-structure-template" "eval-region" "describe-key" "jinx-correct" "describe-package" "eval-region" "wucuo-start" "wucuo-mode" "flyspell-mode" "wucuo-mode" "flyspell-mode" "wucuo-start" "wucuo-stop" "wucuo-start" "wucuo-stop" "wucuo-start" "wucuo-stop" "wucuo-start" "eval-region" "wucuo-mode" "woman" "flyspell-mode" "flyspell-correct-word" "flyspell-mode" "org-insert-structure-template" "flyspell-mode" "customize-themes" "vundo" "org-roam-node-open" "describe-key" "org-version" "eval-region" "org-insert-structure-template" "org-version" "compile" "eval-region" "kill-buffer" "deft-find-file" "eval-region" "org-roam-capture" "customize-themes" "customize-option" "load-theme" "eval-region" "overwrite-mode" "treemacs-kill-buffer" "ansi-term" "eval-region" "compile" "cd" "compile" "vterm" "compile" "lsp-format-buffer"))
